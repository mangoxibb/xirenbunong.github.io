<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xiren</title>
  
  <subtitle>谦谦君子，温润如玉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-21T15:32:09.737Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xiren</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yoursite.com/2018/05/06/2018/05/zhengze/"/>
    <id>http://yoursite.com/2018/05/06/2018/05/zhengze/</id>
    <published>2018-05-05T16:00:00.000Z</published>
    <updated>2018-05-21T15:32:09.737Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 在编写处理字符串的程序或网页时, 经常会有查找符合某些复杂规则的字符串的需要, 正则表达式就是用于描述这些规则的工具. 换句话说, 正则表达式就是记录文本规则的代码.</p><p><a id="more"></a></p><h4></h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 在编写处理字符串的程序或网页时, 经常会有查找符合某些复杂规则的字符串的需要, 正则表达式就是用于描述这些规则的工具. 换句话说, 正则表达式就是记录文本规则的代码.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>浅谈javascript难点</title>
    <link href="http://yoursite.com/2018/05/02/2018/05/js7/"/>
    <id>http://yoursite.com/2018/05/02/2018/05/js7/</id>
    <published>2018-05-01T16:00:00.000Z</published>
    <updated>2018-05-16T13:50:34.290Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>1.函数</h4><p>为什么要创建对象?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">全局变量命名太多可能会造成命名冲突, 放在一个对象下好整合</span><br></pre></td></tr></table></figure></p><p>为什么要使用函数?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以复用代码、维护性高、可读性高</span><br></pre></td></tr></table></figure></p><p>为什么要利用函数也是对象的性质给其添加属性, 并赋值为函数?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">因为这样可以将数值缓存下来</span><br><span class="line">例:</span><br><span class="line">函数名.属性 = function(参数)&#123;</span><br><span class="line">    函数体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>为什么要将对象作为参数传入函数?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">因为函数调用传入实参时(例: 函数名(实参1,实参2,...,实参n))</span><br><span class="line">若参数个数太多, 则实参必须与形参一一对应, 容易出错, 并且有</span><br><span class="line">可选参数时, 可以不传.</span><br><span class="line">使用对象做形参, 只写一个, 例:</span><br><span class="line">function 函数名(对象X)&#123;</span><br><span class="line">    var 对象Y = &#123;&#125;;</span><br><span class="line">    对象Y.属性1 = 对象X.属性1;</span><br><span class="line">    对象Y.属性2 = 对象X.属性2;</span><br><span class="line">    对象Y.属性3 = 对象X.属性3;</span><br><span class="line">    对象Y.属性4 = 对象X.属性4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>为什么要将对象或者函数作为函数返回值?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这样就可以返回多个值</span><br><span class="line">return &#123;</span><br><span class="line">    name : &apos;xm&apos;,</span><br><span class="line">    age  : 18</span><br><span class="line">&#125;</span><br><span class="line">return function()&#123;</span><br><span class="line">    函数体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4>1.闭包</h4><p>为什么要使用闭包?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">因为函数内定义的变量(局部变量)不能在函数体外访问, 想要将该变量在函数体外访问到, </span><br><span class="line">需要在函数内部再定义函数B, 通过B函数函数才能在函数外访问到改变量, 进行操作.</span><br></pre></td></tr></table></figure></p><p>闭包的优缺点:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">优点: 有利于封装, 可以访问局部变量.</span><br><span class="line">缺点：内存占用严重浪费, 会造成内存泄漏.</span><br></pre></td></tr></table></figure></p><h4>2.原型</h4><p>为什么要使用原型?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使方法的属性可以在方法外部去定义</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function test()&#123;</span><br><span class="line">    空;</span><br><span class="line">&#125;</span><br><span class="line">代码示例:</span><br><span class="line">test.prototype.color = &quot;red&quot;;</span><br><span class="line">test.prototype.showInfo = function()&#123;</span><br><span class="line">    alert(this.color);</span><br><span class="line">&#125;</span><br><span class="line">或者(json格式):</span><br><span class="line">test.prototype = &#123;</span><br><span class="line">    color: &quot;red&quot;;</span><br><span class="line">    showInfo: function()&#123;</span><br><span class="line">        alert(this.color);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">备注:</span><br><span class="line">1.prototype是每个函数自带的一个属性</span><br><span class="line">2.混合模式 = 构造 + 原型</span><br></pre></td></tr></table></figure></p><h4>3.封装</h4><p>为什么要使用封装?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将局部变量、方法隐藏在接口中, 通过对外的接口来访问该属性或对象</span><br></pre></td></tr></table></figure></p><h4>4.单例模式</h4><p>为什么要使用单例模式?<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个类只有一个实例, 如</span><br><span class="line">①公司事件：员工若干, 而老板只有一个</span><br><span class="line">②皇宫事件：大臣若干, 而皇帝只有一个</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>响应式开发（二）Bootstrap</title>
    <link href="http://yoursite.com/2018/05/01/2018/05/Bootstrap/"/>
    <id>http://yoursite.com/2018/05/01/2018/05/Bootstrap/</id>
    <published>2018-04-30T16:00:00.000Z</published>
    <updated>2018-04-18T13:31:53.780Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> Bootstrap, 来自 Twitter, 是目前最受欢迎的前端框架.Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的, 它简洁灵活, 使得 Web 开发更加快捷.</p><p><a id="more"></a></p><h4>概览</h4><p><img src="/img/boot.png" alt="banner"></p><h4>1.开发环境的搭建</h4><h3>1.1 安装Git</h3><p>Bootstrap CDN 推荐</p><p>&lt;!-- 新 Bootstrap 核心 CSS 文件 --&gt;&lt;link href=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</p><p>&lt;!-- 可选的Bootstrap主题文件（一般不使用） --&gt;&lt;script src=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap-theme.min.css&quot;&gt;&lt;/script&gt;</p><p>&lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入 --&gt;&lt;script src=&quot;https://cdn.bootcss.com/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;</p><p>&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;&lt;script src=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</p><p>你还可以使用以下的 CDN 服务：国内推荐使用 : https://www.staticfile.org/国际推荐使用：https://cdnjs.com/</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; Bootstrap, 来自 Twitter, 是目前最受欢迎的前端框架.Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的, 它简洁灵活, 使得 Web 开发更加快捷.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="响应式开发" scheme="http://yoursite.com/tags/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发入门</title>
    <link href="http://yoursite.com/2018/04/20/2018/04/wechatApp/"/>
    <id>http://yoursite.com/2018/04/20/2018/04/wechatApp/</id>
    <published>2018-04-19T16:00:00.000Z</published>
    <updated>2018-04-03T12:02:41.680Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 2017年1月9日, 微信小程序正式上线. 微信小程序无需下载, 无需安装, 即扫即用, 属于轻量型应用.小程序是一种新的开放能力, 开发者可以快速地开发一个小程序. 小程序可以在微信内被便捷地获取和传播, 同时具有出色的使用体验.</p><p><a id="more"></a></p><h4>概览</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 2017年1月9日, 微信小程序正式上线. 微信小程序无需下载, 无需安装, 即扫即用, 属于轻量型应用.小程序是一种新的开放能力, 开发者可以快速地开发一个小程序. 小程序可以在微信内被便捷地获取和传播, 同时具有出色的使用体验.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="wechat" scheme="http://yoursite.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>响应式开发（一）Foundation</title>
    <link href="http://yoursite.com/2018/04/16/2018/04/foundation/"/>
    <id>http://yoursite.com/2018/04/16/2018/04/foundation/</id>
    <published>2018-04-15T16:00:00.000Z</published>
    <updated>2018-04-09T07:09:06.146Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 号称是世界上最先进的响应式前端框架, Foundation是一个易用、强大而且灵活的框架, 用于构建基于任何设备上的Web应用. 提供多种Web上的UI 组件, 如表单、按钮、 标签等.</p><p><a id="more"></a></p><h4>概览</h4><h4>1.开发环境的搭建</h4><h3>1.1 安装Git</h3><p>关于git的下载地址, 安装方式, 在本人博客<a href="">git入门基础</a>中有具体讲解.</p><h3>1.2 安装Node.js</h3><p>查看node版本, 不能小于6.0.0(关于如何安装或者跟新node, 在本人博客&quot;<a href="https://xirenbunong.github.io/2018/02/28/2018/03/hexo%20pro/" target="_blank" rel="noopener">手把手教你使用Hexo打造个人博客</a>&quot;中有)<img src="/img/foundation1.png" alt="banner"></p><h3>1.3 下载Foundation</h3><p>npm install --global foundation-cli全局安装, 所以--global</p><p>foundation new会出现三个问题:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.安装web, APP, Email(选择一项即可);</span><br><span class="line">2.项目名称;</span><br><span class="line">3.直接回车即可</span><br></pre></td></tr></table></figure></p><p>安装完成后显示如下, 则表示成功, Ctrl+C退出, 否则看下文解决方法<br><img src="/img/foundation2.png" alt="banner"></p><p>如果遇到以下问题, 删除文件, 然后再npm install --save, 然后foundation new安装一次, 即可解决:<br><img src="/img/foundation3.png" alt="banner"></p><h3>1.4 启动服务预览</h3><p>cd进入到项目根目录下(非常重要！！！), 执行npm start启动服务, 然后打开文件所在目录, 在根目录下有index.html, 浏览器打开即可<br><img src="/img/foundation3.png" alt="banner"></p><h4>2.基本概念与常用工具类</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过对列添加属性来实现效果</span><br><span class="line">column: 列、 row:行.</span><br></pre></td></tr></table></figure></p><h3>2.1 了解栅格布局</h3><p>原理: 将一行分为12列进行布局, 三种尺寸：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">small: &lt; 640px</span><br><span class="line">medium: 640px &lt; &amp;&amp; &lt; 1024px</span><br><span class="line">large: &gt; 1024px</span><br></pre></td></tr></table></figure></p><h3>2.2 Flex布局</h3><p>1&gt; 不指定列宽, 则自动填充剩余位置<br>2&gt; shrink根据内容缩减列宽<br>3&gt; 可以设置对齐方式<br>4&gt; 可以控制不同尺寸下盒子排列顺序</p><h3>2.3 Visibility Classes(盒子的显示与隐藏)</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&gt;show-for-medium</span><br><span class="line">在中屏或大于中屏的屏幕上显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2&gt;show-for-large</span><br><span class="line">在大屏或大于大屏的屏幕上显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3&gt;show-for-small-only</span><br><span class="line">仅在小屏中显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4&gt;show-for-medium-only</span><br><span class="line">仅在中屏中显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5&gt;show-for-large-only</span><br><span class="line">仅在大屏中显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6&gt;hide-for-medium</span><br><span class="line">在中屏或大于中屏的屏幕上隐藏</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7&gt;hide-for-large</span><br><span class="line">在大屏或大于大屏的屏幕上隐藏</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8&gt;hide-for-small-only</span><br><span class="line">仅在小屏中隐藏</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9&gt;hide-for-medium-only</span><br><span class="line">仅在中屏中隐藏</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10&gt;hide-for-large-only</span><br><span class="line">仅在大屏中隐藏</span><br></pre></td></tr></table></figure></p><h3>2.4 Float classes(盒子对齐)</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&gt;float-left 居左显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2&gt;float-right 居右显示</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3&gt;float-center 居中显示</span><br></pre></td></tr></table></figure></p><h3>2.5 Helper Classes</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&gt;text-left 文字居左对齐</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2&gt;text-right 文字居右对齐</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3&gt;text-center 文字居中对齐</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4&gt;text-justify 文字两端对齐</span><br></pre></td></tr></table></figure></p><h4>3.多媒体组件</h4><h3>3.1 Badeg(徽章图标)</h3><h3>3.2 Flex Video(可伸缩视频)</h3><h3>3.3 Label(标签)</h3><h3>3.4 Orbit(轮播图)</h3><h3>3.5 Progress Bar(进度条)</h3><h3>3.6 Thumbnail(缩略图)</h3><h3>3.7 Tooltip(提示框)</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 号称是世界上最先进的响应式前端框架, Foundation是一个易用、强大而且灵活的框架, 用于构建基于任何设备上的Web应用. 提供多种Web上的UI 组件, 如表单、按钮、 标签等.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="响应式开发" scheme="http://yoursite.com/tags/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>响应式开发（题外篇）Flex布局</title>
    <link href="http://yoursite.com/2018/04/15/2018/04/flex/"/>
    <id>http://yoursite.com/2018/04/15/2018/04/flex/</id>
    <published>2018-04-14T16:00:00.000Z</published>
    <updated>2018-05-15T14:23:37.497Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 2009年, W3C提出了一种新的方案—-Flex布局, 可以简便、完整、响应式地实现各种页面布局. Flex 是 Flexible Box 的缩写, 意为&quot;弹性布局&quot;, 用来为盒状模型提供最大的灵活性.任何一个容器都可以指定为Flex 布局.</p><p><a id="more"></a></p><h4>概览</h4><p><img src="/img/flex.jpg" alt="banner"></p><h4>1.1一般使用格式(套路)</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">display: flex;  </span><br><span class="line">flex-direction: row;  </span><br><span class="line">justify-content:center;   </span><br><span class="line">align-items:flex-end</span><br></pre></td></tr></table></figure></p><h4>1.2基本概念</h4><h4>2.1父元素属性</h4><p>flex-direction主轴的方向justify-content主轴上的对齐方式align-items侧轴方向上的对齐方式flex-wrap决定项目在一行排不下的情况下是否换行flex-flow是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。align-content在侧轴方向上有额外空间时，如何每排布一行，当容器只有一行时，它不起作用</p><h4>2.2子元素属性</h4><p>order定义项目的排列顺序，数值越小排列越靠前，默认为0，可能的值为任意整数。flex-grow定义项目的放大比例，默认为0，即如果存在剩余空间也不放大。flex-shrink定义了项目的缩小比例，默认为1，即如果空间不足该项目将缩小flex-basis定义了在分配多余空间之前，项目占据的主轴空间（main-size）。flex是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。align-self允许单个项目有与其他项目不一样的侧轴对齐方式，可覆盖align-items属性</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 2009年, W3C提出了一种新的方案—-Flex布局, 可以简便、完整、响应式地实现各种页面布局. Flex 是 Flexible Box 的缩写, 意为&amp;quot;弹性布局&amp;quot;, 用来为盒状模型提供最大的灵活性.任何一个容器都可以指定为Flex 布局.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="响应式开发" scheme="http://yoursite.com/tags/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>git入门基础</title>
    <link href="http://yoursite.com/2018/04/06/2018/04/git/"/>
    <id>http://yoursite.com/2018/04/06/2018/04/git/</id>
    <published>2018-04-06T04:23:58.000Z</published>
    <updated>2018-05-23T09:17:28.210Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> Git 是一个为了更好地管理 Linux 内核开发而创立的分布式版本控制和软件配置管理软件. 国内外知名 Git 代码托管网站有： GitHub.com Coding.net code.csdn.net ...</p><p><a id="more"></a></p><h3>1.</h3><p>新知识扑面而来的时候，可能会绝望，痛苦。但是不要放弃，没有人一生下来就会这些东西的，慢慢来，想学的，总会学会。首先说一下git，github，gitbash的区别。</p><p>git是一个软件，因为它要安装，用于开发项目，因为它采用分布式。github是一个托管平台，就是一个网站，从个人角度来说是防止你在本地的文件丢失，从团队角度来讲是便于团队开发，因为大家都能根据项目地址查看下载文件代码。gitbash是软件git自带的命令行工具，类似cmd，可以在命令行中输入命令快速操作文件。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">敬请期待</span><br></pre></td></tr></table></figure></p><h3>2.</h3><p>new repository 点击创建一个仓库Repository name 仓库名称Description 描述该仓库Create repository 创建仓库</p><h3>3.</h3><p>cd是用来进入某个目录的，白色的字是自己打的（前面那个美元符号是自动生成的），然后现在就进入了我们要上传路径的目录下。输入git init，这个意思是在当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）输入git add.，这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换成这个特定的文件名即可。rm -rf 文件名/文件夹mkdir 文件夹vim 文件1.git init2.git remote add origin ssh地址(把当前文件夹和git仓库的文件夹对应起来)3.git pull origin master4.git status 查看当前状态5.git add . 追踪文件6.git commit -am '注释' 提交并添加注释7.git push 上传文件</p><p>git checkout -b pro_v1.0  切换分支到V1.0版本的分支 -b参数表示该分支是新建的</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; Git 是一个为了更好地管理 Linux 内核开发而创立的分布式版本控制和软件配置管理软件. 国内外知名 Git 代码托管网站有： GitHub.com Coding.net code.csdn.net ...&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>webpack入门基础</title>
    <link href="http://yoursite.com/2018/04/05/2018/04/webpack/"/>
    <id>http://yoursite.com/2018/04/05/2018/04/webpack/</id>
    <published>2018-04-05T04:23:58.000Z</published>
    <updated>2018-03-30T14:06:17.297Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> webpack是一个前端资源加载打包工具。让前端工程模块化，让我们可以把复杂的程序细化为一个一个小的文件;根据模块间的依赖关系，生成对应的静态资源。</p><p><a id="more"></a></p><h3>1.</h3><p>模块之间的依赖关系是由require(commonjs规范)或import(es6规范)实现的。</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">敬请期待</span><br></pre></td></tr></table></figure></p><h3>2.</h3><p>webpack.config.js配置文件各项说明</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">敬请期待</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; webpack是一个前端资源加载打包工具。让前端工程模块化，让我们可以把复杂的程序细化为一个一个小的文件;根据模块间的依赖关系，生成对应的静态资源。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>javascript入门基础（六）BOM</title>
    <link href="http://yoursite.com/2018/04/04/2018/04/js6/"/>
    <id>http://yoursite.com/2018/04/04/2018/04/js6/</id>
    <published>2018-04-03T16:00:00.000Z</published>
    <updated>2018-04-08T15:04:20.544Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>1.window对象</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法: alert()、 confirm()、 prompt()、 open()、 close()</span><br></pre></td></tr></table></figure></p><p>1&gt;setTimeout()<br>超时调用(规定时间后发生事件)<br>setTimeout(&quot;code&quot;, millisec)或setTimeout(function(){}, millisec)<br>code: 代码串或者函数<br>millisec: 毫秒数</p><p>2&gt;clearTimeout<br>清除超时调用</p><p>3&gt;setInterval(code, millisec)<br>间歇调用(每隔指定时间执行一次代码)<br>millisec: 时间间隔的毫秒数</p><p>4&gt;clearInterval清除间歇调用</p><h4>2.Location对象</h4><p>1&gt;location.href<br>返回当前页面的URL<br>location.href(&quot;src&quot;)</p><p>2&gt;location.hash<br>返回URL中的hash</p><p>3&gt;location.host<br>返回服务器名称和</p><p>4&gt;location.hostname<br>返回不带端口号的服务器名称</p><p>5&gt;location.pathname<br>返回URL中的目录和文件名</p><p>6&gt;location.port<br>返回URL中指定的端口号</p><p>7&gt;location.protocol<br>返回页面使用的协议</p><p>8&gt;location.search<br>返回URL的查询字符串</p><p>9&gt;location.replace<br>重新定向URL</p><p>10&gt;location.reload<br>重新加载当前显示的页面</p><h4>3.History对象</h4><p>可用history.go(num)代替<br>1&gt;history.back()<br>回到历史记录的上一步</p><p>2&gt;history.forward()<br>回到历史记录的下一步</p><h4>4.Screen对象</h4><p>1&gt;screen.availWidth<br>返回可用的屏幕宽度</p><p>2&gt;screen.availHight<br>返回可用的屏幕高度<br>对比window.innerWidth与window.innerHeight</p><h4>5.Navigator对象</h4><p>1&gt;navigator.userAgent<br>返回浏览器名称、 版本等信息</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript入门基础（五）DOM事件</title>
    <link href="http://yoursite.com/2018/04/03/2018/04/js5/"/>
    <id>http://yoursite.com/2018/04/03/2018/04/js5/</id>
    <published>2018-04-02T16:00:00.000Z</published>
    <updated>2018-04-08T15:15:33.663Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>1.HTML事件</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">关于this指向: 在事件触发的函数中, this是对该DOM对象的引用, 该函数需要有参数接收</span><br><span class="line">&lt;tag 事件 = &quot;执行脚本&quot;&gt;&lt;/tag&gt;或者函数名称Fn(this)</span><br></pre></td></tr></table></figure></p><h3>鼠标事件</h3><p>onload:页面加载时触发<br>onclick: 鼠标点击时触发<br>onmouseover: 鼠标滑过时触发<br>onmouseout: 鼠标离开时触发<br>onfocus: 获得焦点时触发<br>onblur: 失去焦点时触发<br>onchange: 域的内容改变时触发(一般作用于select、checkbox、radio)<br>onscroll: 拖动滚动条滚动时触发<br>onsubmit: 表单中的确认按钮被点击时发生(绑定在form表单上, 而不是按钮上)<br>onmousedown: 鼠标的按钮在元素上按下时<br>onmousemove: 在鼠标指针移动时触发<br>onresize: 调整浏览器窗口大小时触发</p><h4>2.DOM0级事件</h4><p>element.事件 = 执行脚本</p><h4>3.键盘事件</h4><p>(顺序)onkeydown: 用户按下一个键盘按键时发生<br>onkeypress: 在键盘按键被按下并释放一个键时发生<br>onkeyup: 在键盘按键被松开时发生<br>(keyCode: 返回事件触发的键值)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript入门基础（四）DOM基础</title>
    <link href="http://yoursite.com/2018/04/02/2018/04/js4/"/>
    <id>http://yoursite.com/2018/04/02/2018/04/js4/</id>
    <published>2018-04-01T16:00:00.000Z</published>
    <updated>2018-03-27T13:41:03.693Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>1.getElementById()</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过id获取.</span><br></pre></td></tr></table></figure></p><h4>2.getElementsByTagName()</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过标签名称获取(数组).</span><br></pre></td></tr></table></figure></p><h4>3.设置元素样式</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element.style.styleName = &apos;styleValue&apos;;</span><br><span class="line">element:需要被设置样式的DOM对象</span><br><span class="line">styleName:样式名称, 如: color, fontSize(不能font-size), backgroundColor...</span><br><span class="line">styleValue: 样式值</span><br></pre></td></tr></table></figure></p><h4>4.innerHTML</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element.innerHTML;</span><br><span class="line">返回element之间的html内容。</span><br><span class="line">element.innerHTML= &quot;html&quot;;</span><br><span class="line">设置element之间的html内容。</span><br></pre></td></tr></table></figure></p><h4>5.className</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element.className;</span><br><span class="line">获取element的class值。</span><br><span class="line">element.className = &quot;class&quot;;</span><br><span class="line">改变element的class值。</span><br></pre></td></tr></table></figure></p><h4>6.gitAttribute</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element.getAttribute(&quot;attribute&quot;);</span><br><span class="line">attribute: 属性, 如: id align color </span><br><span class="line">获取自定义的属性</span><br></pre></td></tr></table></figure></p><h4>7.setAttribute</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.setAttribute(&quot;attribute&quot;, &quot;value&quot;);</span><br><span class="line">设置element元素的属性</span><br></pre></td></tr></table></figure></p><h4>8.removeAttribute</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.removeAttribute(&quot;attribute&quot;);</span><br><span class="line">移除元素的属性</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript入门基础（三）内置对象（Math和Date）</title>
    <link href="http://yoursite.com/2018/04/01/2018/04/js3/"/>
    <id>http://yoursite.com/2018/04/01/2018/04/js3/</id>
    <published>2018-03-31T16:00:00.000Z</published>
    <updated>2018-04-01T09:26:47.443Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>3.Math方法</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常见的Math方法：</span><br><span class="line">min()、max()、ceil()、floor()、round()、abs()、random()...</span><br></pre></td></tr></table></figure></p><h3>3.1min()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.min(num1, ...);</span><br><span class="line">返回最小值.</span><br></pre></td></tr></table></figure></p><h3>3.2max()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.max(num1, ...);</span><br><span class="line">返回最大值.</span><br></pre></td></tr></table></figure></p><h3>3.3ceil()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.ceil(num);</span><br><span class="line">向上取整.</span><br></pre></td></tr></table></figure></p><h3>3.4floor()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.floor(num);</span><br><span class="line">向下取整.</span><br></pre></td></tr></table></figure></p><h3>3.5round()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.round(num);</span><br><span class="line">四舍五入取整.</span><br></pre></td></tr></table></figure></p><h3>3.6abs()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.abs(num);</span><br><span class="line">返回绝对值.</span><br></pre></td></tr></table></figure></p><h3>3.7random()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Math.random();</span><br><span class="line">返回一个大于等于0小于1的随机数.</span><br><span class="line">n~m之间的随机数公式：</span><br><span class="line">r = Math.floor(Math.random() * (m -n +1) +n).</span><br></pre></td></tr></table></figure></p><h4>4.Date方法</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常见的Math方法：</span><br><span class="line">min()、max()、ceil()、floor()、round()、abs()、random()...</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var date = new Date();</span><br><span class="line">getFullYear(): 返回四位数年份.</span><br><span class="line">getMonth(): 返回月份，返回值0~11.</span><br><span class="line">getDate(): 返回日.</span><br><span class="line">getDay(): 返回星期，返回值0~6.</span><br><span class="line">getHours(): 返回小时.</span><br><span class="line">getMinutes(): 返回分.</span><br><span class="line">getSeconds(): 返回秒.</span><br><span class="line">getTime(): 返回 1970年 1月 1日至今的毫秒数.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置年月日星期时分秒的Math方法为：</span><br><span class="line">将get替换为set</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回星期值的代码：</span><br><span class="line">var date = new Date();</span><br><span class="line">var weeks = [&quot;日&quot;, &quot;一&quot;, &quot;二&quot;, &quot;三&quot;, &quot;四&quot;, &quot;五&quot;, &quot;六&quot;];</span><br><span class="line">var week = date.getDay();</span><br><span class="line">&quot;星期&quot; + weeks[week]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript入门基础（二）内置对象（String）</title>
    <link href="http://yoursite.com/2018/03/17/2018/03/js2/"/>
    <id>http://yoursite.com/2018/03/17/2018/03/js2/</id>
    <published>2018-03-16T16:00:00.000Z</published>
    <updated>2018-04-01T09:25:55.428Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>2.字符串方法</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常见的字符串方法：</span><br><span class="line">charAt()、charCodeAt()、indexOf()、lastIndexOf()、slice()、substring()、substr()、split()、replace()、touUpperCase()、toLowerCase()...</span><br></pre></td></tr></table></figure></p><h3>2.1chatAt()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.chatAt(index);</span><br><span class="line">返回字符串索引为index的字符.</span><br></pre></td></tr></table></figure></p><h3>2.2charCodeAt()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.charCodeAt(index);</span><br><span class="line">返回字符串中索引为index字符的字符编码.</span><br></pre></td></tr></table></figure></p><h3>2.3indexOf()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.indexOf(&quot;element&quot;);</span><br><span class="line">返回元素或字符串在字符串中的索引.</span><br></pre></td></tr></table></figure></p><h3>2.4lastIndexOf()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.lastIndexOf(&quot;element&quot;);</span><br><span class="line">在字符串末尾检测元素位置，但索引值还是正序.</span><br></pre></td></tr></table></figure></p><h3>2.5slice()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.slice(start, end);</span><br><span class="line">返回所选区段字符串.</span><br></pre></td></tr></table></figure></p><h3>2.6substring()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">同slice();</span><br><span class="line">区别: 参数为负数时，自动转换为0.</span><br></pre></td></tr></table></figure></p><h3>2.7substr()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str.substr(start, len);</span><br><span class="line">start: 字符串开始位置的索引值(必选).</span><br><span class="line">len：截取字符串长度(可选).</span><br><span class="line">返回所选区段字符串.</span><br></pre></td></tr></table></figure></p><h3>2.8split()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.split(separator);</span><br><span class="line">separator: 字符串的分隔符(&quot;2018/03/19&quot;中的&quot;/&quot;; &quot;hello-world&quot;中的&quot;-&quot;).</span><br></pre></td></tr></table></figure></p><h3>2.9replace()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str.replace(substr, replace);</span><br><span class="line">substr: 需要被替换的元素；</span><br><span class="line">replace：替换元素</span><br><span class="line">将字符串中的元素替换.</span><br></pre></td></tr></table></figure></p><h3>2.10touUpperCase()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.touUpperCase();</span><br><span class="line">将字符串转换为大写.</span><br></pre></td></tr></table></figure></p><h3>2.11toLowerCase()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.toLowerCase();</span><br><span class="line">将字符串转换为小写.</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript入门基础（一）内置对象（数组）</title>
    <link href="http://yoursite.com/2018/03/16/2018/03/js1/"/>
    <id>http://yoursite.com/2018/03/16/2018/03/js1/</id>
    <published>2018-03-16T14:23:58.000Z</published>
    <updated>2018-04-01T09:24:59.453Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><p><a id="more"></a></p><h4>1. 数组</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">会用到的单词如下：</span><br><span class="line">variable   变量；   separator   分隔符；    index   索引；  element 元素.</span><br></pre></td></tr></table></figure></p><h3>1.1 arr.length</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用于for遍历数组(i &lt; arr.length)</span><br></pre></td></tr></table></figure></p><h3>1.2 数组方法</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常见数组方法：</span><br><span class="line">push(), unshift(), pop(), shift(), join(), reverse(), sort(), concat(), slice()...</span><br></pre></td></tr></table></figure></p><h3>1.2.1 push()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.push(&quot;variable&quot;);</span><br><span class="line">将参数按顺序加入数组arr的尾部.</span><br></pre></td></tr></table></figure></p><h3>1.2.2 unshift()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.unshift(&quot;variable&quot;);</span><br><span class="line">将参数按顺序加入数组arr的头部.</span><br></pre></td></tr></table></figure></p><h3>1.2.3 pop()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.pop(&quot;variable&quot;);</span><br><span class="line">删除数组arr的最后一个元素.</span><br></pre></td></tr></table></figure></p><h3>1.2.4 shift()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.shift(&quot;variable&quot;);</span><br><span class="line">删除数组arr的第一个元素.</span><br></pre></td></tr></table></figure></p><h3>1.2.5 join()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.join(&quot;separator&quot;);</span><br><span class="line">separator包括：&quot; &quot;(空)、&quot;-&quot;(减号)、默认不填为&quot;,&quot;(逗号)</span><br><span class="line">将数组元素连接起来，如：</span><br><span class="line">[1,2,3]:    123;    1-2-3;  1,2,3;</span><br></pre></td></tr></table></figure></p><h3>1.2.6 reverse()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.reverse();</span><br><span class="line">将数组反序.</span><br></pre></td></tr></table></figure></p><h3>1.2.7 sort()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.sort()</span><br><span class="line">将数组元素字典序排序降序(即首字母或首数字排序).</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">降序：</span><br><span class="line">arr.sort(function(a, b)&#123;return b - a&#125;);</span><br><span class="line">升序：</span><br><span class="line">arr.sort(function(a, b)&#123;return a - b&#125;);</span><br></pre></td></tr></table></figure></p><h3>1.2.8 concat()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.concat(arr1, arr2,...);</span><br><span class="line">连接两个或多个数组.</span><br></pre></td></tr></table></figure></p><h3>1.2.9 slice()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.slice(start, end);</span><br><span class="line">从数组返回所选元素(注意参数end的取值).</span><br></pre></td></tr></table></figure></p><h3>1.2.10 splice()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.splice(index, count);</span><br><span class="line">删除从index处开始的count个元素.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arr.splice(index, 0, item1, ...);</span><br><span class="line">index:起始位置</span><br><span class="line">0:要删除的项数为0，即不删除任何数</span><br><span class="line">item1:要插入的项</span><br><span class="line">在数组指定位置插入元素.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr.splice(index, count, item1, ...);</span><br><span class="line">count:要删除的项数</span><br><span class="line">在指定位置插入值，并删除count个元素(注意参数index的取值).</span><br></pre></td></tr></table></figure></p><h3>1.2.11 indexOf()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.indexOf(searchValue, startIndex);</span><br><span class="line">searchValue: 要查找的元素(必选)</span><br><span class="line">startIndex: 查找起点的索引值(可选)</span><br><span class="line">从数组中查找元素.</span><br></pre></td></tr></table></figure></p><h3>1.2.12 lastIndexOf()</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.lastIndexOf(searchValue, startIndex);</span><br><span class="line">从数组的末尾开始查找元素(但返回的值仍是正序索引值).</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; JavaScript 是世界上最流行的编程语言。这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>组件开发-网页常见组件</title>
    <link href="http://yoursite.com/2018/03/15/2018/03/module/"/>
    <id>http://yoursite.com/2018/03/15/2018/03/module/</id>
    <published>2018-03-14T16:00:00.000Z</published>
    <updated>2018-05-14T09:05:00.803Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 前端页面组件化开发可以快速完成页面, 通过组件化的方式, 保证代码重用, 避免重复劳动, 保证页面上线后能够高效运行.</p><p><a id="more"></a></p><h4>1.header(页头)</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码地址：</span><br></pre></td></tr></table></figure></p><h4>2.footer(页脚)</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码地址：</span><br></pre></td></tr></table></figure></p><h4>3.shade(遮罩)</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码地址：</span><br></pre></td></tr></table></figure></p><h4>4.list(列表)</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码地址：</span><br></pre></td></tr></table></figure></p><h4>5.login(登录)</h4><h4>6.search(搜索)</h4><h4>7.carousel(轮播图)</h4><h4>8.loading(加载)</h4><h4>.content-()</h4><h4>.content-()</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 前端页面组件化开发可以快速完成页面, 通过组件化的方式, 保证代码重用, 避免重复劳动, 保证页面上线后能够高效运行.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="css js" scheme="http://yoursite.com/tags/css-js/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号开发</title>
    <link href="http://yoursite.com/2018/03/03/2018/03/wechat/"/>
    <id>http://yoursite.com/2018/03/03/2018/03/wechat/</id>
    <published>2018-03-02T16:00:00.000Z</published>
    <updated>2018-05-14T08:33:44.441Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 微信公众平台, 给个人、企业和组织提供业务服务与用户管理能力的全新服务平台.</p><p><a id="more"></a></p><h5>公众号开发思维导图</h5><p><img src="/img/wechat.jpg" alt="banner"></p><h5>1.开发环境准备</h5><p>因为微信公众号想要真机测试, 必须要有自己的服务器才能使用, 所以开始会讲解服务器的购买, 备案过程等</p><h4>1.1 服务器搭建过程</h4><p>&lt;!-- 在此解释申明初学者容易疑惑的一个地方, 就是给服务器备案还是给域名备案, --&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 微信公众平台, 给个人、企业和组织提供业务服务与用户管理能力的全新服务平台.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="wechat" scheme="http://yoursite.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>VS-code插件配置方式及使用教程</title>
    <link href="http://yoursite.com/2018/03/02/2018/03/vscode/"/>
    <id>http://yoursite.com/2018/03/02/2018/03/vscode/</id>
    <published>2018-03-01T16:00:00.000Z</published>
    <updated>2018-03-30T13:58:43.637Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 看了一下，网上大多都是介绍插件的名字和功能，并没有插件的配置方法，导致一些小白不懂为什么安装了插件还是不能达到想要的效果，下面会介绍一些常用插件，以及插件配置方法。操作方式：file(文件) - - - &gt; preference(首选项) - - - &gt;settings(设置)</p><p><a id="more"></a></p><p><img src="/img/set.png" alt="banner"></p><h3>vscode-fileheader</h3><p>向文件头添加注释，并支持自动更新文件修改时间。要启用，请添加以下到您的settings(设置)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"fileheader.Author"</span>: <span class="string">"袭人"</span>,</span><br><span class="line"><span class="string">"fileheader.LastModifiedBy"</span>: <span class="string">"who"</span></span><br></pre></td></tr></table></figure></p><h3>Power Mode</h3><p>炫酷的代码编辑特效</p><p>要启用，请添加以下到您的settings(设置)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"powermode.enabled"</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3>vscode-icons</h3><p>Visual Studio代码文件的图标</p><p>要启用，请添加以下到您的settings(设置)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"workbench.iconTheme"</span>: <span class="string">"vscode-icons"</span></span><br></pre></td></tr></table></figure></p><h3>Auto Rename Tag</h3><p>代码标签自动闭合</p><p>要启用，请添加以下到您的settings(设置)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"auto-rename-tag.activationOnLanguage"</span>: [</span><br><span class="line">        <span class="string">"html"</span>,</span><br><span class="line">        <span class="string">"xml"</span>,</span><br><span class="line">        <span class="string">"php"</span>,</span><br><span class="line">        <span class="string">"javascript"</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 看了一下，网上大多都是介绍插件的名字和功能，并没有插件的配置方法，导致一些小白不懂为什么安装了插件还是不能达到想要的效果，下面会介绍一些常用插件，以及插件配置方法。操作方式：file(文件) - - - &amp;gt; preference(首选项) - - - &amp;gt;settings(设置)&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="软件" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>算法概要</title>
    <link href="http://yoursite.com/2018/02/25/2018/02/algorithm/"/>
    <id>http://yoursite.com/2018/02/25/2018/02/algorithm/</id>
    <published>2018-02-24T16:00:00.000Z</published>
    <updated>2018-04-01T06:14:59.268Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 在数学和计算机科学之中, 算法（Algorithm）为一个计算的具体步骤, 常用于计算、数据处理和自动推理. 精确而言, 算法是一个表示为有限长列表的有效方法. 算法应包含清晰定义的指令用于计算函数.</p><p><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 在数学和计算机科学之中, 算法（Algorithm）为一个计算的具体步骤, 常用于计算、数据处理和自动推理. 精确而言, 算法是一个表示为有限长列表的有效方法. 算法应包含清晰定义的指令用于计算函数.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>css入门基础（二）Absolute(绝对定位)</title>
    <link href="http://yoursite.com/2018/02/19/2018/02/css2/"/>
    <id>http://yoursite.com/2018/02/19/2018/02/css2/</id>
    <published>2018-02-18T16:00:00.000Z</published>
    <updated>2018-04-01T06:19:32.368Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 层叠样式表（Cascading Style Sheet）是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言. 接下来会对css中一些重要的样式进行讲解,并分析其应用场景.Absolute(绝对定位), 在实际的网页构建中有很大的作用.</p><p><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 层叠样式表（Cascading Style Sheet）是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言. 接下来会对css中一些重要的样式进行讲解,并分析其应用场景.Absolute(绝对定位), 在实际的网页构建中有很大的作用.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css入门基础（一）Float(浮动)</title>
    <link href="http://yoursite.com/2018/02/18/2018/02/css1/"/>
    <id>http://yoursite.com/2018/02/18/2018/02/css1/</id>
    <published>2018-02-17T16:00:00.000Z</published>
    <updated>2018-04-01T06:19:32.368Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要:</strong> 层叠样式表（Cascading Style Sheet）是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言. 接下来会对css中一些重要的样式进行讲解, 并分析其应用场景. Float(浮动), 在实际的网页构建中有很大的作用.</p><p><a id="more"></a></p><h4>1.清除浮动的四种方法</h4><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.&quot;overflow: hidden;&quot;</span><br><span class="line">给父元素添加;</span><br><span class="line">2.&quot;clear: both;&quot;</span><br><span class="line">给元素的同级盒子添加(会增加标签)</span><br><span class="line">3.伪元素</span><br><span class="line">4.双伪元素</span><br></pre></td></tr></table></figure></p><h4>2.应用场景</h4><p>瀑布流布局 (如下图例子中, 图片在左边, 文字都在右边)<img src="/img/css1.png" alt="banner"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要:&lt;/strong&gt; 层叠样式表（Cascading Style Sheet）是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言. 接下来会对css中一些重要的样式进行讲解, 并分析其应用场景. Float(浮动), 在实际的网页构建中有很大的作用.&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
</feed>
